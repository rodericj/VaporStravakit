//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Vapor

public struct RunningRace: Content {

    /** The unit system in which the race should be displayed. */
    public enum MeasurementPreference: String, Codable, Equatable, CaseIterable {
        case feet = "feet"
        case meters = "meters"
    }

    /** The name of the city in which the race is taking place. */
    public var city: String?

    /** The name of the country in which the race is taking place. */
    public var country: String?

    /** The race's distance, in meters. */
    public var distance: Float?

    /** The unique identifier of this race. */
    public var id: Int?

    /** The unit system in which the race should be displayed. */
    public var measurementPreference: MeasurementPreference?

    /** The name of this race. */
    public var name: String?

    /** The set of routes that cover this race's course. */
    public var routeIds: [Int]?

    /** The type of this race. */
    public var runningRaceType: Int?

    /** The time at which the race begins started in the local timezone. */
    public var startDateLocal: DateTime?

    /** The name of the state or geographical region in which the race is taking place. */
    public var state: String?

    /** The vanity URL of this race on Strava. */
    public var url: String?

    /** The URL of this race's website. */
    public var websiteURL: String?

    enum CodingKeys: String, CodingKey {
        case city = "city"
        case country = "country"
        case distance = "distance"
        case id = "id"
        case measurementPreference = "measurement_preference"
        case name = "name"
        case routeIds = "route_ids"
        case runningRaceType = "running_race_type"
        case startDateLocal = "start_date_local"
        case state = "state"
        case url = "url"
        case websiteURL = "website_url"
    }

}
