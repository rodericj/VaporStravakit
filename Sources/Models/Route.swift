//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Vapor

public struct Route: Content {

    public var athlete: SummaryAthlete?

    /** The time at which the route was created */
    public var createdAt: DateTime?

    /** The description of the route */
    public var description: String?

    /** The route's distance, in meters */
    public var distance: Float?

    /** The route's elevation gain. */
    public var elevationGain: Float?

    /** Estimated time in seconds for the authenticated athlete to complete route */
    public var estimatedMovingTime: Int?

    /** The unique identifier of this route */
    public var id: Int?

    /** The unique identifier of the route in string format */
    public var idStr: String?

    public var map: PolylineMap?

    /** The name of this route */
    public var name: String?

    /** Whether this route is private */
    public var `private`: Bool?

    /** The segments traversed by this route */
    public var segments: [SummarySegment]?

    /** Whether this route is starred by the logged-in athlete */
    public var starred: Bool?

    /** This route's sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed) */
    public var subType: Int?

    /** An epoch timestamp of when the route was created */
    public var timestamp: Int?

    /** This route's type (1 for ride, 2 for runs) */
    public var type: Int?

    /** The time at which the route was last updated */
    public var updatedAt: DateTime?

    enum CodingKeys: String, CodingKey {
        case athlete = "athlete"
        case createdAt = "created_at"
        case description = "description"
        case distance = "distance"
        case elevationGain = "elevation_gain"
        case estimatedMovingTime = "estimated_moving_time"
        case id = "id"
        case idStr = "id_str"
        case map = "map"
        case name = "name"
        case `private` = "private"
        case segments = "segments"
        case starred = "starred"
        case subType = "sub_type"
        case timestamp = "timestamp"
        case type = "type"
        case updatedAt = "updated_at"
    }

}
