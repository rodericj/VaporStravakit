//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Vapor

public struct DetailedAthlete: Content {

    /** The athlete's sex. */
    public enum Sex: String, Codable, Equatable, CaseIterable {
        case m = "M"
        case f = "F"
    }

    /** The athlete's preferred unit system. */
    public enum MeasurementPreference: String, Codable, Equatable, CaseIterable {
        case feet = "feet"
        case meters = "meters"
    }

    /** The unique identifier of the athlete */
    public var id: Int?

    /** The athlete's city. */
    public var city: String?

    /** The athlete's country. */
    public var country: String?

    /** The time at which the athlete was created. */
    public var createdAt: DateTime?

    /** The athlete's first name. */
    public var firstname: String?

    /** The athlete's last name. */
    public var lastname: String?

    /** Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription. */
    public var premium: Bool?

    /** URL to a 124x124 pixel profile picture. */
    public var profile: String?

    /** URL to a 62x62 pixel profile picture. */
    public var profileMedium: String?

    /** Resource state, indicates level of detail. Possible values: 1 -> "meta", 2 -> "summary", 3 -> "detail" */
    public var resourceState: Int?

    /** The athlete's sex. */
    public var sex: Sex?

    /** The athlete's state or geographical region. */
    public var state: String?

    /** Whether the athlete has any Summit subscription. */
    public var summit: Bool?

    /** The time at which the athlete was last updated. */
    public var updatedAt: DateTime?

    /** The athlete's bikes. */
    public var bikes: [SummaryGear]?

    /** The athlete's clubs. */
    public var clubs: [SummaryClub]?

    /** The athlete's follower count. */
    public var followerCount: Int?

    /** The athlete's friend count. */
    public var friendCount: Int?

    /** The athlete's FTP (Functional Threshold Power). */
    public var ftp: Int?

    /** The athlete's preferred unit system. */
    public var measurementPreference: MeasurementPreference?

    /** The athlete's shoes. */
    public var shoes: [SummaryGear]?

    /** The athlete's weight. */
    public var weight: Float?

    enum CodingKeys: String, CodingKey {
        case id = "id"
        case city = "city"
        case country = "country"
        case createdAt = "created_at"
        case firstname = "firstname"
        case lastname = "lastname"
        case premium = "premium"
        case profile = "profile"
        case profileMedium = "profile_medium"
        case resourceState = "resource_state"
        case sex = "sex"
        case state = "state"
        case summit = "summit"
        case updatedAt = "updated_at"
        case bikes = "bikes"
        case clubs = "clubs"
        case followerCount = "follower_count"
        case friendCount = "friend_count"
        case ftp = "ftp"
        case measurementPreference = "measurement_preference"
        case shoes = "shoes"
        case weight = "weight"
    }

}
